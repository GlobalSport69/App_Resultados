FROM mcr.microsoft.com/dotnet/aspnet:7.0 AS base

WORKDIR /src

# Establecer la arquitectura como un argumento
ARG ARCH

COPY chromium.sh .
COPY chrome.sh .

# Dar permisos de ejecución al script y ejecutarlo
RUN chmod +x ./chromium.sh && chmod +x ./chrome.sh
# RUN ls -al && echo "$ARCH" && exit 1;
# RUN /bin/sh chrome.sh && exit 1 ;

# Usar una instrucción condicional en el comando RUN
RUN if [ "$ARCH" = "aarch64" ] ; then \
        /bin/sh chromium.sh; \
    elif [ "$ARCH" = "x86_64" ] ; then \
       /bin/sh chrome.sh; \
    else \
        echo "Arquitectura no soportada" && exit 1 ; \
    fi

# EXPOSE 80
# EXPOSE 443

FROM mcr.microsoft.com/dotnet/sdk:7.0 AS build
WORKDIR /src
COPY LotteryResult/*.sln .
COPY LotteryResult/LotteryResult/LotteryResult.csproj ./LotteryResult/
COPY LotteryResult/LotteryResult.Data/LotteryResult.Data.csproj ./LotteryResult.Data/

# RUN dotnet restore "LotteryResult/LotteryResult.csproj"
# RUN dotnet restore "LotteryResult.Data/LotteryResult.Data.csproj"

COPY LotteryResult/LotteryResult/ ./LotteryResult/
COPY LotteryResult/LotteryResult.Data/ ./LotteryResult.Data/

# COPY . .
WORKDIR /src/LotteryResult
RUN dotnet build "LotteryResult.csproj" -c Development -o /src/LotteryResult/build

FROM build AS publish
RUN dotnet publish "LotteryResult.csproj" -c Development -o /src/LotteryResult/publish /p:UseAppHost=false

FROM base AS final
COPY --from=publish /src/LotteryResult/publish .
ENTRYPOINT ["dotnet", "LotteryResult.dll"]