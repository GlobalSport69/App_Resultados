FROM mcr.microsoft.com/dotnet/aspnet:7.0 AS base

WORKDIR /src

# Establecer la arquitectura como un argumento
ARG ARCH

RUN apt-get update && apt-get install -y wget gnupg ca-certificates && \
    wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | gpg --dearmor -o /usr/share/keyrings/chromium-archive-keyring.gpg && \
    echo "deb [arch=$ARCH signed-by=/usr/share/keyrings/chromium-archive-keyring.gpg] http://dl.google.com/linux/chrome/deb/ stable main" | tee /etc/apt/sources.list.d/chromium.list && \
    apt-get update && apt-get install -y chromium

ENV PUPPETEER_EXECUTABLE_PATH="/usr/bin/chromium"

# EXPOSE 80
# EXPOSE 443

FROM mcr.microsoft.com/dotnet/sdk:7.0 AS build
WORKDIR /src
COPY LotteryResult/*.sln .
COPY LotteryResult/LotteryResult/LotteryResult.csproj ./LotteryResult/
COPY LotteryResult/LotteryResult.Data/LotteryResult.Data.csproj ./LotteryResult.Data/

# RUN dotnet restore "LotteryResult/LotteryResult.csproj"
# RUN dotnet restore "LotteryResult.Data/LotteryResult.Data.csproj"

COPY LotteryResult/LotteryResult/ ./LotteryResult/
COPY LotteryResult/LotteryResult.Data/ ./LotteryResult.Data/

# COPY . .
WORKDIR /src/LotteryResult
RUN dotnet build "LotteryResult.csproj" -c Development -o /src/LotteryResult/build

FROM build AS publish
RUN dotnet publish "LotteryResult.csproj" -c Development -o /src/LotteryResult/publish /p:UseAppHost=false

FROM base AS final
COPY --from=publish /src/LotteryResult/publish .
ENTRYPOINT ["dotnet", "LotteryResult.dll"]